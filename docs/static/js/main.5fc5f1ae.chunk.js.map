{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","item","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertAPP","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OAEI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACF,IAAIC,EAAKL,EACNA,EAAWM,OAAOC,OAAO,IAC5BT,GAAe,SAAAU,GAAI,OAAIH,GAAJ,mBAAYG,OAC/BP,EAAc,MAKd,SACI,uBACIQ,KAAK,OACLC,MAAQV,EACRW,SAlBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCHlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAUH,GAF5C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCFPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAKgB,IAAON,IACvB,4BAAIA,QCHDO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECDwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAZAC,qBAAU,WAENxB,EAASC,GACRwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAIvB,CAACpB,IAEIqB,EDjByBK,CAAa1B,GAAhCa,EAAb,EAAQN,KAAYa,EAApB,EAAoBA,QAGpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEMhBgB,EAtBM,WAErB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACQ,qCACK,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCb7B6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5fc5f1ae.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        let item=inputValue;\r\n        if(inputValue.trim().length>2){\r\n        setCategories( cats=> [item,...cats]);\r\n        setInputValue('');\r\n    }\r\n    }\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\" \r\n                value={ inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\n\r\nexport const getGifs = async(category) =>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=OID3MhHosjubUQzQ9HZ9p6aFFbRVl2m9`;\r\n    const resp= await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    //console.log(data);\r\n   // console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title,url} ) => {\r\n    // console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n          <img src= {url} alt = {title} />\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const { data:images,loading } = useFetchGifs(category);\r\n \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n     \r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}    \r\n        <div className=\"card-grid\">\r\n           \r\n                {  \r\n                    images.map( img => (\r\n                    <GifGridItem \r\n                    key = {img.id}\r\n                    {...img } />\r\n                    ))\r\n                }\r\n            \r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(() =>{\r\n\r\n        getGifs( category)\r\n        .then(imgs =>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                    }); \r\n        })\r\n\r\n    },[category]);\r\n    \r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertAPP = () =>{\r\n\r\nconst [categories, setCategories] = useState(['One Punch'])\r\n\r\nreturn (\r\n        <>\r\n             <h2>GifExpertAPP</h2>\r\n             <AddCategory setCategories={setCategories} />\r\n             <hr />\r\n\r\n             <ol>\r\n                 {\r\n                     categories.map( category =>\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                     )\r\n                 }\r\n             </ol>\r\n        </>\r\n    );\r\n}\r\nexport default GifExpertAPP;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertAPP from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertAPP />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}